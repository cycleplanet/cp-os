{
  "rules": {
    "Chats": {
      "$user1": {
        "$user2": {
          ".read": "auth.uid === $user1 || auth.uid === $user2",
          ".write": "auth.uid === $user1 || auth.uid === $user2",
          ".validate": true
        },
        ".read": "auth.uid === $user1",
        ".write": "auth.uid === $user1",
        ".validate": true
      }
    },
    "Users": {
      "$userId": {
        "hosting": {
          "requests": {
            "$timestamp": {
              // nice rules, stating that only the sender and the receiver have access to host requests.
              // Currently, at least for reads, overruled by the rules for /Users/<userId> below.
              ".read": "auth.uid === $userId || auth.uid === data.child('sender').val()",
              ".write": "auth.uid === $userId || auth.uid === newData.child('sender').val()",
              ".validate": true
            }
          }
        },

        // only logged in users can read user data
        // this should actually be restricted further: https://github.com/cycleplanet/cycle-planet/issues/31
        ".read": "auth !== null" ,
        ".write": "auth.uid === $userId",
        ".validate": true
      },
      ".read": "auth !== null",
      ".write": false,
      ".validate": true
    },
    "$other": {
      ".read": true,
      ".write": true,
      ".validate": true
    }
  }
}